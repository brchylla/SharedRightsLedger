/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Access control rules for tutorial-network
 */
rule Default {
    description: "Allow all participants access to all resources"
    participant: "ANY"
    operation: ALL
    resource: "org.artistrights.sample.*"
    action: ALLOW
}

rule SystemACL {
  description:  "System ACL to permit all access"
  participant: "ANY"
  operation: ALL
  resource: "org.hyperledger.composer.system.*"
  action: ALLOW
}

rule rule_ModelsSeeThemselvesOnly {
    description: "Models can see their own record only"
    participant(m): "org.artistrights.sample.Model"
    operation: READ
    resource(p): "org.artistrights.sample.Photo"
    condition: (m.getIdentifier() == p.photoModel.getIdentifier())
    action: ALLOW
}

rule rulePhotographersCanCreatePhotos {
    description: "Photographers can create photos"
    participant(m): "org.artistrights.sample.Photographer"
    operation: CREATE
    resource(p): "org.artistrights.sample.Photo"
    condition: (m.getIdentifier() == p.photographer.getIdentifier())
    action: ALLOW
}

rule rule_PhotographersSeeAndUpdatePhotosEverywhere {
    description: "Photographers can see and update their own photos everywhere"
    participant(p): "org.artistrights.sample.Photographer"
    operation: READ
    resource(photo): "org.artistrights.sample.Photo"
    condition: (p.getIdentifier() == photo.photographer.getIdentifier())
    action: ALLOW
}

/*
rule rule_ArbitratorsCanSeeEverything {
    description: "Arbitrators can view the whole fabric"
    participant: "org.artistrights.sample.Arbitrator"
    operation: READ
    resource: "org.artistrights.sample.*"
    action: ALLOW
}
*/